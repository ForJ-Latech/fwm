<project name="fwm" default="dist" basedir=".">
	<description>
	    configure first with either:
			configure.eclipse
			configure.prod
		
		
		mvn goals = process-sources profile = copy-jars
		needs to be run so that lib folder exists with libraries.
		
		That will enable the running of dist. 
	</description>


	<property name="src" location="src"/>
	<property name="resources" location="src/main/resources"/>
	<property name="build" location="build"/>
	<property name="dist" location="dist"/>
	<property name="lib" location="lib"/>
	<property name="propdir" location="FWM-properties"/>

	<path id="master-classpath">
		<fileset dir="${lib}">
			<include name="*.jar"/>
		</fileset>
		<pathelement path="${build}"/>
	</path>

	<target name="deleteResources">
		<delete failonerror="false" quiet="false" includeemptydirs="true">
			<fileset dir="${resources}">
				<include name="**"/>
			</fileset>
			<fileset dir="${propdir}">
				<include name="**"/>
			</fileset>
		</delete>
	</target>

	<target name="configure.eclipse" depends="deleteResources">
		<copy todir="${resources}">
			<fileset dir="configure/eclipse"/>
		</copy>
		<copy todir="${resources}">
			<fileset dir="configure/both"/>
		</copy>
	</target>

	<target name="configure.prod" depends="deleteResources">
		<copy todir="${resources}">
			<fileset dir="configure/prod"/>
		</copy>
		<copy todir="${resources}">
			<fileset dir="configure/both"/>
		</copy>
	</target>


	<target name="configure.start_test" depends="deleteResources">
		<copy todir="${resources}">
			<fileset dir="configure/start_test"/>
		</copy>
		<copy todir="${resources}">
			<fileset dir="configure/both"/>
		</copy>
	</target>

	<target name="init" depends="clean">
		<!-- Create the time stamp -->
		<tstamp/>
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build}"/>
		<!-- This will cause our lib to be packaged in WEB-INF/lib -->
		<mkdir dir="${build}/src/main/webapp/WEB-INF/lib"/>
		
		<mkdir dir="${build}/src/main/webapp/WEB-INF/classes"/>
	</target>

	<target name="compile" depends="init">
		<javac srcdir="${src}" destdir="${build}">
			<classpath refid="master-classpath"/>
		</javac>

		<!-- <copy todir="${build}/src/main/webapp/WEB-INF/classes">
			<fileset dir="${build}"></fileset>
		</copy> -->
		
		<copy todir="${build}">
			<fileset dir="${src}/main/java" excludes="**/*.java">
			</fileset>
		</copy>
		<copy todir="${build}/src">
			<fileset dir="${src}" excludes="main/java/**"/>
		</copy>
		
		<!--
		<copy todir="${build}/src/main/webapp/WEB-INF/lib">
			<fileset dir="${lib}"/>
		</copy> -->
	</target>


	<target name="dist" depends="compile">
		<mkdir dir="${dist}/lib"/>
		<copy todir="${dist}/lib">
			<fileset dir="${lib}"></fileset>
		</copy>
		<jar jarfile="${dist}/FWM-${DSTAMP}.jar" 
					basedir="${build}">
			<manifest>
				<attribute name="Main-Class" value="com.forj.fwm.startup.App"/>
				<attribute name="Application-Name" value="ForJ FWM" />
				<attribute name="Class-Path" value="
					. FWM-${DSTAMP} lib/log4j-1.2.17.jar lib/ormlite-core-5.0.jar lib/ormlite-jdbc-5.0.jar lib/h2-1.4.192.jar lib/commons-configuration2-2.0.jar lib/commons-lang3-3.3.2.jar lib/commons-logging-1.2.jar lib/commons-beanutils-1.9.2.jar lib/commons-collections-3.2.1.jar lib/spring-context-3.1.2.RELEASE.jar lib/spring-aop-3.1.2.RELEASE.jar lib/aopalliance-1.0.jar lib/spring-beans-3.1.2.RELEASE.jar lib/spring-core-3.1.2.RELEASE.jar lib/spring-expression-3.1.2.RELEASE.jar lib/spring-asm-3.1.2.RELEASE.jar lib/spring-webmvc-3.1.2.RELEASE.jar lib/spring-context-support-3.1.2.RELEASE.jar lib/spring-web-3.1.2.RELEASE.jar lib/jetty-server-8.1.5.v20120716.jar lib/javax.servlet-3.0.0.v201112011016.jar lib/jetty-continuation-8.1.5.v20120716.jar lib/jetty-http-8.1.5.v20120716.jar lib/jetty-io-8.1.5.v20120716.jar lib/jetty-servlet-8.1.5.v20120716.jar lib/jetty-security-8.1.5.v20120716.jar lib/jetty-webapp-8.1.5.v20120716.jar lib/jetty-xml-8.1.5.v20120716.jar lib/jetty-servlets-8.1.5.v20120716.jar lib/jetty-client-8.1.5.v20120716.jar lib/jetty-util-8.1.5.v20120716.jar lib/jetty-jsp-8.1.4.v20120524.jar lib/javax.servlet.jsp-2.2.0.v201112011158.jar lib/org.apache.jasper.glassfish-2.2.2.v201112011158.jar lib/javax.servlet.jsp.jstl-1.2.0.v201105211821.jar lib/org.apache.taglibs.standard.glassfish-1.2.0.v201112081803.jar lib/javax.el-2.2.0.v201108011116.jar lib/com.sun.el-2.2.0.v201108011116.jar lib/org.eclipse.jdt.core-3.7.1.jar lib/jstl-1.2.jar
					"/>
			</manifest>
		</jar>
		<!-- <antcall target="clean"/> -->
		<echo>Your file should be available in "${dist}/FWM-${DSTAMP}.jar"!
		</echo>
	</target>

	<target name="clean"
	        description="clean up">
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${build}"/>
	</target>

</project>